#include <stdio.h>
#include <stdlib.h>

struct Node {
    int data;
    struct Node* next;
};

// Function to delete a given node (not the last node)
void deleteMiddleNode(struct Node* node) {
    if (node == NULL || node->next == NULL) {
        printf("Cannot delete the last node or a NULL node.\n");
        return;
    }
    
    // Copy data from the next node
    struct Node* temp = node->next;
    node->data = temp->data;
    node->next = temp->next;
    
    // Free the next node
    free(temp);
    printf("Node deleted successfully.\n");
}

// Helper function to create a new node
struct Node* createNode(int data) {
    struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));
    newNode->data = data;
    newNode->next = NULL;
    return newNode;
}

// Helper function to print the linked list
void printList(struct Node* head) {
    while (head != NULL) {
        printf("%d -> ", head->data);
        head = head->next;
    }
    printf("NULL\n");
}

// Main function
int main() {
    // Create a simple linked list: 1 -> 2 -> 3 -> 4 -> 5
    struct Node* head = createNode(1);
    head->next = createNode(2);
    head->next->next = createNode(3);
    head->next->next->next = createNode(4);
    head->next->next->next->next = createNode(5);
    
    printf("Original List:\n");
    printList(head);

    // Delete the 3rd node (value 3)
    printf("Deleting node with value 3:\n");
    deleteMiddleNode(head->next->next);

    printf("List after deletion:\n");
    printList(head);

    return 0;
}
